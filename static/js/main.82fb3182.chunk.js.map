{"version":3,"sources":["Form.js","ClockComponents.js","Util.js","Hand.js","AnalogClock.js","App.js","index.js"],"names":["Form","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","options","defaultOptions","setClockSize","bind","assertThisInitialized","setBorderReq","setBorderColor","setBaseColor","buildClock","randomClock","event","preventDefault","width","target","value","setState","objectSpread","border","borderColor","baseColor","stopPropagation","customizeClock","_this2","getRandomColor","colorCode","i","Math","floor","random","react_default","a","createElement","className","class","for","type","min","max","id","onChange","name","checked","onClick","maxLength","placeholder","Component","ClockContainer","styled","div","_templateObject","ClockBaseBorder","_templateObject2","ClockBase","_templateObject3","ClockCenter","_templateObject4","ClockHand","_templateObject5","css","_templateObject6","handAngle","secondStartAngle","sweep","_templateObject7","_templateObject8","keyframes","_templateObject9","Util","seconds","minutes","hours","Hand","assign","getHandAngle","AnalogClock","date","Date","getSeconds","getMinutes","getHours","setInterval","_this$props","src_Hand","App","console","log","src_Form","rows","readOnly","JSON","stringify","src_AnalogClock","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.82fb3182.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Form extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            options: this.props.defaultOptions\r\n        };\r\n        this.setClockSize = this.setClockSize.bind(this);\r\n        this.setBorderReq = this.setBorderReq.bind(this);\r\n        this.setBorderColor = this.setBorderColor.bind(this);\r\n        this.setBaseColor = this.setBaseColor.bind(this);\r\n        this.buildClock = this.buildClock.bind(this);\r\n        this.randomClock = this.randomClock.bind(this);\r\n    }\r\n\r\n    setClockSize(event) {\r\n        event.preventDefault();\r\n        let width = event.target.value + 'px';\r\n        this.setState({ options: { ...this.state.options, width } })\r\n    }\r\n\r\n    setBorderReq(event) {\r\n        let border = event.target.value === 'yes';\r\n        this.setState({ options: { ...this.state.options, border } })\r\n    }\r\n\r\n    setBorderColor(event) {\r\n        event.preventDefault();\r\n        let borderColor = '#' + event.target.value;\r\n        this.setState({ options: { ...this.state.options, borderColor } })\r\n    }\r\n\r\n    setBaseColor(event) {\r\n        event.preventDefault();\r\n        let baseColor = '#' + event.target.value;\r\n        this.setState({ options: { ...this.state.options, baseColor } })\r\n    }\r\n\r\n    buildClock(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.props.customizeClock(this.state.options);\r\n    }\r\n\r\n    randomClock(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        let baseColor = this.getRandomColor();\r\n        let borderColor = this.getRandomColor();\r\n        this.setState({ options: { ...this.state.options, borderColor, baseColor } }, () => this.buildClock(event));\r\n    }\r\n\r\n    getRandomColor() {\r\n        var letters = '0123456789ABCDEF';\r\n        var colorCode = '#';\r\n        for (var i = 0; i < 6; i++) {\r\n            colorCode += letters[Math.floor(Math.random() * 16)];\r\n        }\r\n        return colorCode;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"form\">\r\n                <h4><i>Clock Options</i></h4>\r\n                <div class=\"form-group\">\r\n                    <label for=\"clock-size\">Clock size (px)</label>\r\n                    <input type=\"range\" min=\"200\" max=\"500\" class=\"form-control-range\" id=\"clock-size\" onChange={this.setClockSize} />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"border-req-radios\">Border Required?</label>\r\n                    <div class=\"form-check\" name=\"border-req-radios\">\r\n                        <input class=\"form-check-input\" type=\"radio\" name=\"border-req-yes\" id=\"border-req-yes\" value=\"yes\" checked={this.state.options.border === true} onClick={this.setBorderReq} />\r\n                        <label class=\"form-check-label\" for=\"border-req-yes\">Yes</label>\r\n                    </div>\r\n                    <div class=\"form-check\">\r\n                        <input class=\"form-check-input\" type=\"radio\" name=\"bored-req-no\" id=\"bored-req-no\" value=\"no\" checked={this.state.options.border === false} onClick={this.setBorderReq} />\r\n                        <label class=\"form-check-label\" for=\"bored-req-no\">No</label>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"clock-border-color\">Clock border color</label>\r\n                    <input type=\"input\" class=\"form-control\" id=\"clock-border-color\" maxLength=\"6\" placeholder=\"2e2e2e\" onChange={this.setBorderColor} />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"clock-base-color\">Clock base color</label>\r\n                    <input type=\"input\" class=\"form-control\" id=\"clock-base-color\" maxLength=\"6\" placeholder=\"17a2b8\" onChange={this.setBaseColor} />\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-primary\" onClick={this.buildClock}>Build Clock!</button>\r\n                &nbsp;\r\n                <button type=\"submit\" class=\"btn btn-warning\" onClick={this.randomClock}>Surprise Me!</button>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Form;","import styled, { css, keyframes } from 'styled-components';\r\n\r\nconst ClockContainer = styled.div`\r\n        \theight: ${props => props.width || \"400px\"};\r\n            width: ${props => props.width || \"400px\"};\r\n        `;\r\n\r\nconst ClockBaseBorder = styled.div`\r\n            position: relative;\r\n            box-sizing: border-box;\r\n            height: 100%;\r\n            width: 100%;\r\n            background-color: ${props => props.borderColor ? props.borderColor : \"transparent\"};\r\n            padding: ${props => props.border ? \"5% 5% 5% 5%\" : \"0\"};\r\n            border-radius: 100%;\r\n        `;\r\nconst ClockBase = styled.div`\r\n            position: relative;\r\n            height: 100%;\r\n            width: 100%;\r\n            background-color: ${props => props.baseColor ? props.baseColor : \"black\"};\r\n            border-radius: 100%;\r\n        `;\r\nconst ClockCenter = styled.div`\r\n            position: absolute;\r\n            left: 50%;\r\n            top: 50%;\r\n            width: 12px;\r\n            height: 12px;\r\n            border: 2px solid #fff;\r\n            background-color: #459cff;\r\n            border-radius: 100%;\r\n            margin-left: -6px;\r\n            margin-top: -9px;\r\n            z-index: 100;\r\n        `;\r\n\r\nconst ClockHand = styled.div`\r\n            position: absolute;\r\n            top: 50%;\r\n            left: ${props => props.type === 'second' ? \"40%\" : \"45%\"};\r\n            outline: ${props => props.type === 'second' ? \"2px solid #d81c7a\" : \"2px solid #fff\"};\r\n\r\n            ${props => props.type === 'second' && css`\r\n                    width:60%;\r\n                    transform-origin: 17%;\r\n                    transform: rotate(${props => props.handAngle}deg);\r\n                    transition: ${props => props.handAngle > 270 && 'transform 250ms ease-in-out'};\r\n                    // animation: ${props => props.secondStartAngle && sweep(props.secondStartAngle)} 60s linear 0s infinite;\r\n            `}\r\n            ${props => props.type === 'minute' && css`\r\n                    width:45%;\r\n                    transform-origin: 12%;\r\n                    transform: rotate(${props => props.handAngle}deg);\r\n            `}\r\n            ${props => props.type === 'hour' && css`\r\n                    width:35%;\r\n                    transform-origin: 15%;\r\n                    transform: rotate(${props => props.handAngle}deg);\r\n            `}\r\n        `;\r\n\r\nconst sweep = (secondStartAngle) => keyframes`\r\n    from {\r\n        transform: rotate(${secondStartAngle}deg)}\r\n    }\r\n    to {\r\n        transform: rotate(${secondStartAngle + 360}deg)}\r\n    }`\r\n\r\nexport { ClockContainer, ClockBaseBorder, ClockBase, ClockCenter, ClockHand };","class Util {\r\n    static getHandAngle(props) {\r\n        let handType = props.type;\r\n        let handAngle = 0;\r\n        switch (handType) {\r\n            case 'second': handAngle = (270 + (props.seconds * 6));\r\n                break;\r\n            case 'minute': handAngle = (270 + (props.minutes * 6));\r\n                break;\r\n            case 'hour': handAngle = (270 + (props.hours * 30));\r\n                break;\r\n            default: handAngle = 0;\r\n        }\r\n        return handAngle;\r\n    }\r\n}\r\n\r\nexport default Util;","import React, { Component } from 'react';\r\nimport { ClockHand } from './ClockComponents';\r\nimport Util from './Util';\r\n\r\nclass Hand extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.type === 'second') {\r\n            let handAngle = (270 + (this.props.seconds * 6));\r\n            if (!this.state.secondStartAngle) {\r\n                this.setState({ secondStartAngle: handAngle });\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ClockHand type={this.props.type} handAngle={Util.getHandAngle(this.props)} {...this.state} />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Hand;\r\n","import React, { Component } from 'react';\r\nimport { ClockContainer, ClockBaseBorder, ClockBase, ClockCenter } from './ClockComponents';\r\nimport Hand from './Hand.js';\r\n\r\nclass AnalogClock extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        let date = new Date();\r\n        this.state = {\r\n            seconds: date.getSeconds(),\r\n            minutes: date.getMinutes(),\r\n            hours: date.getHours() > 12 ? date.getHours() - 12 : date.getHours()\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        setInterval(() => {\r\n            let date = new Date();\r\n            this.setState({\r\n                seconds: date.getSeconds(),\r\n                minutes: date.getMinutes(),\r\n                hours: date.getHours() > 12 ? date.getHours() - 12 : date.getHours()\r\n            })\r\n        }, 1000)\r\n    }\r\n\r\n    render() {\r\n        const { width, border, borderColor, baseColor } = this.props;\r\n        return (\r\n            <ClockContainer width={width}>\r\n                <ClockBaseBorder border={border} borderColor={borderColor}>\r\n                    <ClockBase baseColor={baseColor}>\r\n                        <ClockCenter />\r\n                        <Hand type=\"second\" {...this.state} />\r\n                        <Hand type=\"minute\" {...this.state} />\r\n                        <Hand type=\"hour\" {...this.state} />\r\n                    </ClockBase>\r\n                </ClockBaseBorder>\r\n            </ClockContainer>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default AnalogClock;","import React, { Component } from 'react';\r\nimport Form from './Form';\r\nimport AnalogClock from './AnalogClock.js'\r\n\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      options: {\r\n        width: \"300px\",\r\n        border: true,\r\n        borderColor: \"#2e2e2e\",\r\n        baseColor: \"#17a2b8\"\r\n      }\r\n    };\r\n    this.customizeClock = this.customizeClock.bind(this);\r\n  }\r\n\r\n  customizeClock(options) {\r\n    console.log(options)\r\n    this.setState({ options: { ...options } });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-4 border-right\">\r\n          <Form defaultOptions={this.state.options} customizeClock={this.customizeClock} />\r\n        </div>\r\n        <div className=\"col border-right\">\r\n          <h4><i>Options</i></h4>\r\n          <textarea class=\"form-control\" id=\"selected-options\" rows=\"7\" readOnly value={JSON.stringify(this.state.options, null, 2)}></textarea>\r\n        </div>\r\n        <div className=\"col\">\r\n          <h4><i>Preview</i></h4>\r\n          <AnalogClock {...this.state.options} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}